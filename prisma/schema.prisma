generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id         Int      @id @default(autoincrement())
  externalId String   @unique
  attributes Json
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  description String
  price       Float
  stockQuantity Int      @default(0)
  sales       Sale[]  
  purchases   Purchase[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Sale {
  id          Int      @id @default(autoincrement())
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   Int
  quantity    Int
  total       Float
  saleDate    DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      Int 
  purchases Purchase[]
}

model Purchase {
  id          Int      @id @default(autoincrement())
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   Int
  quantity    Int
  total       Float
  purchaseDate DateTime @default(now())
  supplier    String    @db.VarChar(255)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId        Int 

  Sale Sale[]
}

model Expense {
  id          Int      @id @default(autoincrement())
  description String   @db.VarChar(255)
  amount      Float
  expenseDate DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      Int 
}

model Report {
  id          Int      @id @default(autoincrement())
  type        String   @db.VarChar(50) // E.g., profit/loss, stock performance
  content     Json     // Store report data in JSON format
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      Int 
}
